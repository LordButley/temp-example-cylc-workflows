#!/usr/bin/env python3
# (C) Crown Copyright, Met Office. All rights reserved.
"""
Script responsible for installing paraflow and building the suite.
"""
import logging
import os
import subprocess

logger = logging.getLogger("install_suite")
stream_handler = logging.StreamHandler()
formatter = logging.Formatter("%(asctime)s::%(levelname)s - %(name)s - %(message)s")
stream_handler.setFormatter(formatter)
logger.addHandler(stream_handler)


def run_bash(cmd):
    logger.info(f"Running {' '.join(cmd)}")
    subprocess.check_call(" ".join(cmd), shell=True)


def _expand_path(path):
    return os.path.expanduser(os.path.expandvars(path))


def build_suite(suite_vars):
    """
    Build the suite.

    - Deploy paraflow to lib/python
    - If run from a cylc suite (deduced by $CYLC_WORKFLOW_RUN_DIR) and pack variables
      defined ($PACK_PATH and $PYTHON_PACK), install the python pack.
    - Unpack the python pack if installed, to a temporary directory for the next step.
    - Build the suite (calling paraflow workflow_builder.py), using the temporary
      environment or otherwise using a sourced conda environment.
    """
    logger.setLevel("CRITICAL")

    if os.getenv("CYLC_WORKFLOW_RUN_DIR"):
        os.chdir(os.getenv("CYLC_WORKFLOW_RUN_DIR"))

    # paraflow install
    run_bash(
        [
            "git",
            "archive",
            f"--remote={suite_vars['PARAFLOW_REPOSITORY']}",
            f"{suite_vars['PARAFLOW_VERSION']}",
            "paraflow",
            "|",
            "tar",
            "-xC",
            "lib/python",
        ]
    )

    # Suite build (using specified conda environment)
    cmd = [
        "source $(dirname $(dirname $(readlink -f $(which conda))))/etc/profile.d/conda.sh "
        "2>/dev/null;",
        "conda",
        "activate",
        f"{suite_vars['CONDA_PATH']};",
        "PYTHONPATH=lib/python",
        "python",
        "lib/python/paraflow/cli/workflow_builder.py",
        "-v",
        "--outputfile=suite-autogenerated.rc",
        "--outputdir=task_defs",
        f"graph_config:{suite_vars['SUITE_NAME']};",
    ]

    run_bash(cmd)

    logger.debug("Finished building suite")